<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:MediaViewer" x:Class="MediaViewer.MainWindow"
        Title="Media Viewer" Height="470" Width="950" MinHeight="470" MinWidth="950" Closing="Window_Closing">
    <Window.Resources>
        <local:WindowColorViewModel x:Key="WindowColors" />
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="{Binding Path=WindowTopBackgroundColor, Mode=TwoWay}" Offset="1"/>
                <GradientStop Color="{Binding Path=WindowBottomBackgroundColor, Mode=TwoWay}" Offset="0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.Resources>
            <local:MediaViewerViewModel x:Key="MediaViewerData" />
            <local:RequestImageConverter x:Key="ImageConverter" />
            <local:TestValueConverter x:Key="testValueConverter" />
            <local:BoolToVisibilityConverter x:Key="boolToVisConverter"/>
            <BitmapImage x:Key="NoVolumeImage" UriSource="Images\volume_none.png" />
            <BitmapImage x:Key="LowVolumeImage" UriSource="Images\volume_low-white.png" />
            <BitmapImage x:Key="MedVolumeImage" UriSource="Images\volume_med-white.png" />
            <BitmapImage x:Key="HighVolumeImage" UriSource="Images\volume_high-white.png" />
            <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#FFBA96EE" Opacity="1"/>
            <SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFBA96EE" Opacity="1"/>
            <SolidColorBrush x:Key="DarkBackgroundBrush" Color="MediumPurple" Opacity="1"/>
            <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="Background" Value="{Binding Path=LightSolidColorBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                                    <RowDefinition Height="*" x:Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <Border CornerRadius="2,2,0,0" x:Name="border" Margin="0,0,0,-1.5" Panel.ZIndex="100">
                                    <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="2,0,0,0">
                                        <TabPanel.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </TabPanel.LayoutTransform>
                                        <TabPanel.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </TabPanel.RenderTransform>

                                    </TabPanel>
                                </Border>
                                <Border Grid.Row="1" x:Name="ContentPanel" MinHeight="10" MinWidth="10" Background="{Binding Path=DarkSolidColorBrush}" BorderBrush="#FF979AA2" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                                    <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                                </Border>
                                <Border x:Name="DisabledVisualTop" Grid.Row="1" Grid.RowSpan="2" Background="#8CFFFFFF" CornerRadius="1" Panel.ZIndex="1" IsHitTestVisible="False" Opacity="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                                    <Setter Property="Grid.Row" TargetName="border" Value="1"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2"/>
                                    <Setter Property="Margin" TargetName="border" Value="0,-1.5,0,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">

                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="border" Value="0"/>
                                    <Setter Property="Margin" TargetName="border" Value="0,0,-1,0"/>
                                    <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0"/>
                                    <Setter Property="Margin" TargetName="HeaderPanel" Value="5,2,0,0"/>

                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="border" Value="1"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                                    <Setter Property="Margin" TargetName="border" Value="-6,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--  <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
                                    <Setter Property="Foreground" Value="MediumAquamarine" />
                                    <Setter Property="Opacity" TargetName="DisabledVisualTop" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="10,6,10,6"/>
                <Setter Property="MinWidth" Value="5"/>
                <Setter Property="MinHeight" Value="5"/>
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="MediumAquamarine"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SelectedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="SelectedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="grid">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Grid.LayoutTransform>


                                <Grid x:Name="TemplateTopSelected" Margin="-2,0,-2,0" Panel.ZIndex="0" Opacity="0">
                                    <Grid>
                                        <Border x:Name="BackgroundTop" Background="{Binding Path=DarkSolidColorBrush}" BorderBrush="#FF979AA2" BorderThickness="1,1,1,0" />
                                    </Grid>
                                    <Border x:Name="DisabledVisualTopSelected" Background="#8CFFFFFF" IsHitTestVisible="false" Visibility="Collapsed" />
                                </Grid>
                                <Grid x:Name="TemplateTopUnselected" Margin="0,2,0,1" >
                                    <Grid>
                                        <Border x:Name="TopUnselected_Background" BorderBrush="#FF94979F" BorderThickness="1,1,1,0">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Color="{Binding Path=WindowTopBackgroundColor, Mode=TwoWay}" Offset="0"/>
                                                        <GradientStop Color="{Binding Path=WindowBottomBackgroundColor, Mode=TwoWay}" Offset="1"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                                <!--
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#FFB9F3F3" Offset="0.152"/>
                                                    <GradientStop Color="#FFB9F3F3" Offset="0.456"/>
                                                    <GradientStop Color="#FFAEF3F3" Offset="0.465"/>
                                                    <GradientStop Color="#FF9EF1F1" Offset="1"/>
                                                </LinearGradientBrush>
                                                -->
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="TopUnselectedOver" Background="{Binding Path=DarkSolidColorBrush}" BorderBrush="Purple" BorderThickness="2,1,2,1" Opacity="0"/>
                                        <Border x:Name="TopUnselected_Highlight" Margin="1" BorderBrush="{Binding Path=DarkSolidColorBrush}" BorderThickness="1,1,1,0"/>
                                    </Grid>
                                    <Border x:Name="DisabledVisualTopUnSelected" Background="#8CFFFFFF" IsHitTestVisible="false" Visibility="Collapsed"/>
                                </Grid>


                                <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" Opacity="1"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="grid">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="-90" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="grid">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="90" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="ContentSite">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="180" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="LayoutTransform" TargetName="grid">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                    </MultiTrigger.ExitActions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="Selector.IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
                                    </Trigger.EnterActions>
                                    <Setter Property="Panel.ZIndex" Value="100" />

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                        <Condition Property="Selector.IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                    <Setter Property="Visibility" TargetName="DisabledVisualTopUnSelected" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource OutsideFontColor}"/>
            </Style>
            <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border BorderThickness="0,0,0,1" BorderBrush="Black" Background="Cornsilk">
                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="12" />
            </Style>
            <Storyboard x:Key="ExpandGrid">

                <DoubleAnimation Duration="0:0:0.2" From="0" To="160" Storyboard.TargetProperty="(Grid.Height)" Storyboard.TargetName="AnimatedGrid"/>

            </Storyboard>
            <Storyboard x:Key="ContractGrid">

                <DoubleAnimation Duration="0:0:0.2" From="160" To="0" Storyboard.TargetProperty="(Grid.Height)" Storyboard.TargetName="AnimatedGrid"/>

            </Storyboard>
        </Grid.Resources>
        <local:UserControl1 x:Name="mediaDetailsControl" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="290" Width="497" Loaded="MediaDetailsControl_Loaded"/>
        <GridSplitter HorizontalAlignment="Left" Margin="524,0,0,0" Width="8"/>
        <Grid x:Name="flyoutBtnGrid" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="535,0,0,14">
            <Label x:Name="label" Content="Play  List" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="9,162,0,0" VerticalAlignment="Top" Width="60" Height="19" VerticalContentAlignment="Center" Padding="5,0"/>
            <Label x:Name="playTimeLabel" Content="{Binding Path=TotalPlayTime}" Background="LightGray" HorizontalAlignment="Left" Margin="9,186,0,0" VerticalAlignment="Top" Width="60" Height="19" VerticalContentAlignment="Center" Padding="5,0" RenderTransformOrigin="0.65,0.053"/>
            <Button x:Name="flyoutBtnExpand"
                        Content="Expand"
                        Background="{Binding Path=LightButtonSolidColorBrush}"
                        HorizontalAlignment="Left"
                        Margin="7,389,0,0"
                        VerticalAlignment="Top"
                        Width="60"
                        Visibility="{Binding Path=FlyoutExpand, Converter={StaticResource boolToVisConverter}}"
                        Click="FlyoutButtonExpand_Click"
                        >

                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource ExpandGrid}">
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>

            </Button>
            <Grid x:Name="AnimatedGrid" HorizontalAlignment="Left" Height="0" Margin="3,0,0,28" VerticalAlignment="Bottom" Width="70">
                <Border BorderBrush="{Binding Path=LightButtonSolidColorBrush}" BorderThickness="2">
                    <StackPanel HorizontalAlignment="Left" Height="152" Margin="3,3,0,0" VerticalAlignment="Top" Width="58">
                        <Button x:Name="savePlayListBtn" Background="{Binding Path=LightButtonSolidColorBrush}" Content="Save" Click="SavePlayListBtn_Click"/>
                        <Button x:Name="loadPlayListBtn" Background="{Binding Path=LightButtonSolidColorBrush}" Content="Load" Margin="0,7,0,0" Click="LoadBtn_Click"/>
                        <Button x:Name="deletePlayListBtn" Background="{Binding Path=LightButtonSolidColorBrush}" Content="Delete" Margin="0,7,0,0" IsTabStop="False" Click="DeletePlayListBtn_Click"/>
                    </StackPanel>
                </Border>
            </Grid>
            <Button x:Name="flyoutButtonContract"
                        Background="{Binding Path=LightButtonSolidColorBrush}"
                        Content="Contract"
                        HorizontalAlignment="Left"
                        Margin="7,389,0,0"
                        VerticalAlignment="Top"
                        Width="60"
                        Click="FlyoutContractButton_Click"
                        Visibility="{Binding Path=FlyoutContract, Converter={StaticResource boolToVisConverter}}"
                        >
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource ContractGrid}">
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>

            </Button>
        </Grid>
        <Grid Height="419" Margin="0,10,5,0" HorizontalAlignment="Left">
            <TabControl x:Name="tabControl" Style="{StaticResource TabControlStyle}" TabStripPlacement="Left" Margin="590,0,5,5" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="3" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Song Tree" Style="{StaticResource TabItemStyle}"
                         HorizontalContentAlignment="Center"
                         VerticalContentAlignment="Center"
                         >
                    <Grid Background="CornflowerBlue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <local:LibraryTreeControl x:Name="libraryTreeControl" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalAlignment="Top" VerticalContentAlignment="Center" Margin="0"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Play List" Style="{StaticResource TabItemStyle}"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Center"
                         >
                    <Grid Background="CornflowerBlue">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="95*"/>
                        </Grid.RowDefinitions>
                        <ListView x:Name="playList" Height="393" Margin="1,1,0,0" Width="300"
                                  SelectionMode="Single"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                  MouseDown="ListView_MouseDown"
                                  SelectionChanged="ListView_SelectionChanged"
                                  Background="{Binding Path=LightSolidColorBrush}" Grid.RowSpan="2"
                                  >
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Click="MenuItemDelete_Click"/>
                                    <MenuItem Header="Delete All" Click="MenuItemDeleteAll_Click"/>
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}">
                                    <GridViewColumn Header="Song" Width="200" DisplayMemberBinding="{Binding Song}"/>
                                    <GridViewColumn Header="PlayTime" Width="60" DisplayMemberBinding="{Binding Length}"/>
                                    <GridViewColumn Header="Artist" Width="auto" DisplayMemberBinding="{Binding ArtistName}"/>
                                </GridView>
                            </ListView.View>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="AliceBlue"/>
                                            <Setter Property="FontStyle" Value="Italic"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding NowPlaying}" Value="True">
                                            <Setter Property="Background" Value="MediumPurple"/>
                                            <Setter Property="Foreground" Value="DarkBlue"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding NowPlaying}" Value="False">
                                            <Setter Property="Background" Value="{Binding Path=LightButtonSolidColorBrush}"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="FontWeight" Value="Regular"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </TabItem>
            </TabControl>
            <TextBox x:Name="playListSaveTB"
                     HorizontalAlignment="Left"
                     Height="23"
                     Width="120"
                     Margin="609,222,-4,0"
                     BorderThickness="3"
                     VerticalAlignment="Top"
                     AcceptsReturn="True"
                     VerticalContentAlignment="Center" Visibility="Collapsed"
                     />
            <ComboBox x:Name="savedPlayListsCB"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Path=SavedPlayListModel}"
                      BorderThickness="3"
                      HorizontalAlignment="Left"
                      Margin="609,250,-4,0"
                      VerticalAlignment="Top"
                      Width="120"
                      AllowDrop="True"
                      SelectionChanged="SavedPlayListCB_SelectionChanged" Visibility="Collapsed"
                      >
                <ComboBox.Resources>
                    <!-- Color of ComboBoxItem -->
                    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="MediumPurple" />
                </ComboBox.Resources>
            </ComboBox>
            <ComboBox x:Name="deletePlayListCB"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Path=DeletePlayListModel}"
                      BorderThickness="3"
                      HorizontalAlignment="Left"
                      Margin="609,277,-4,0"
                      VerticalAlignment="Top"
                      Width="120"
                      SelectionChanged="DeletePlayListCB_SelectionChanged" Visibility="Collapsed"
                      >
                <ComboBox.Resources>
                    <!-- Color of ComboBoxItem -->
                    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="MediumPurple" />
                </ComboBox.Resources>
            </ComboBox>

        </Grid>
        <Grid HorizontalAlignment="Left" Height="124" Margin="10,295,0,0" VerticalAlignment="Bottom" Width="509">
            <local:VolumeControl x:Name="volumeControl" HorizontalAlignment="Left" Height="44" Margin="409,10,0,0" VerticalAlignment="Top" Width="100" RenderTransformOrigin="0.5,0.49" PropertyChanged="VolumeControl_PropertyChanged" Visibility="Collapsed" />
            <Button x:Name="rwBtn" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="81,10,0,0" VerticalAlignment="Top" Width="45" Height="45" PreviewMouseLeftButtonDown="RwBtn_PreviewMouseLeftButtonDown">
                <StackPanel>
                    <Image Source="Images\rewind_button.png"/>
                </StackPanel>
            </Button>
            <Button x:Name="playBtn" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="148,11,0,0" VerticalAlignment="Top" Width="45" Height="45" Click="PlayBtn_Click">
                <StackPanel>
                    <Image Source="Images\play_button.png"/>
                </StackPanel>
            </Button>
            <Button x:Name="pauseBtn" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="217,11,0,0" VerticalAlignment="Top" Width="45" Height="45" Click="PauseBtn_Click" RenderTransformOrigin="2.2,0.6">
                <StackPanel>
                    <Image Source="Images\pause_button.png"/>
                </StackPanel>
            </Button>
            <Button x:Name="stopBtn" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="284,11,0,0" VerticalAlignment="Top" Width="45" Height="45" Click="StopBtn_Click">
                <StackPanel>
                    <Image Source="Images\stop_button.png"/>
                </StackPanel>
            </Button>
            <Button x:Name="ffBtn" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="350,11,0,0" VerticalAlignment="Top" Width="45" Height="45" PreviewMouseLeftButtonDown="FfBtn_PreviewMouseLeftButtonDown">
                <StackPanel>
                    <Image Source="Images\fastforward_button.png"/>
                </StackPanel>
            </Button>
            <ProgressBar x:Name="workProgressBar" Background="{Binding Path=LightButtonSolidColorBrush}" Foreground="DarkCyan" HorizontalAlignment="Left" Height="12" Margin="62,65,0,0" VerticalAlignment="Top" Width="387" Visibility="Visible"/>
            <Label x:Name="lblTotalTime" Content="0:00:00" HorizontalAlignment="Left" Margin="462,57,-1,0" VerticalAlignment="Top" AllowDrop="True"/>
            <Label x:Name="lblPlayTime" Content="0:00:00" HorizontalAlignment="Left" Margin="1,58,0,0" VerticalAlignment="Top" AllowDrop="True"/>
            <Button x:Name="Media_Button" Content="Find Media" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="250,91,0,0" VerticalAlignment="Top" Width="75" Click="Media_Button_Click"/>
            <Button x:Name="Exit_Button" Content="Exit" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="350,91,0,0" VerticalAlignment="Top" Width="75" Click="Exit_Button_Click"/>
            <Button Content="Edit Library ..." Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="142,91,0,0" VerticalAlignment="Top" Width="82" Click="Library_Button_Click"/>
            <Button x:Name="Config_Button" Content="Config ..." Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="38,91,0,0" VerticalAlignment="Top" Width="75" Click="Config_Button_Click"/>
            <Button x:Name="volumeButton" Background="{Binding Path=LightButtonSolidColorBrush}" HorizontalAlignment="Left" Margin="449,88,0,0" VerticalAlignment="Top" Width="27" Height="27" RenderTransformOrigin="0.815,0.5" Click="VolumeButton_Click">
                <Image x:Name="volumeImage">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource testValueConverter}">
                            <Binding Path="Volume" />
                            <Binding Source="{StaticResource LowVolumeImage}" />
                            <Binding Source="{StaticResource MedVolumeImage}" />
                            <Binding Source="{StaticResource HighVolumeImage}" />
                            <Binding Source="{StaticResource NoVolumeImage}" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
            </Button>
        </Grid>

    </Grid>
</Window>
